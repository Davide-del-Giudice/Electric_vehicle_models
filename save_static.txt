// ------------------------------------------- //
// WHAT TO DO IN CASE OF BASE_CASE BEGINS HERE //
// ------------------------------------------- //

#ifdef BASE_CASE

Dc0    dc nettype=1 sparse=3 print=no uic=1
Tr0  tran nettype=1 sparse=3 tstop=100 uic=1 acntrl=3 saman=0
Dcx    dc nettype=1 sparse=3 restart=no time=0 print=yes fixsm=yes

Sweep control begin
        k = 0;
        j = 0;
        SWEEP_SOC sweep start=START_SOC step=STEP_SOC  stop=END_SOC  param="EV_SOC_INIT" begin
                k = k + 1;

	Dc1    dc nettype=1 sparse=2 restart=no time=0 print=yes iabstol=1u fixsm=yes


                        P_G1         = get("Dc1.p_G1");
                        P_G2         = get("Dc1.p_G2");
                        P_G3         = get("Dc1.p_G3");
                        P_G6         = get("Dc1.p_G6");
                        P_G8         = get("Dc1.p_G8");

                        Q_G1         = get("Dc1.q_G1");
                        Q_G2         = get("Dc1.q_G2");
                        Q_G3         = get("Dc1.q_G3");
                        Q_G6         = get("Dc1.q_G6");
                        Q_G8         = get("Dc1.q_G8");

                        P_L1         = 100e6*0.217*(1+LAMBDA);
                        P_L2         = 100e6*0.942*(1+LAMBDA);
                        P_L3         = 100e6*0.478*(1+LAMBDA);
                        P_L4         = 100e6*0.076*(1+LAMBDA);
                        P_L5         = 100e6*0.112*(1+LAMBDA);
                        P_L6         = 100e6*0.295*(1+LAMBDA);
                        P_L7         = 100e6*0.090*(1+LAMBDA);
                        P_L8         = 100e6*0.035*(1+LAMBDA);
                        P_L9         = 100e6*0.061*(1+LAMBDA);
                        P_L10        = 100e6*0.135*(1+LAMBDA);
                        P_L11        = 100e6*0.149*(1+LAMBDA);

                        Q_L1         = 100e6*0.127;
                        Q_L2         = 100e6*0.190;
                        Q_L3         = 100e6*(-0.039);
                        Q_L4         = 100e6*0.016;
                        Q_L5         = 100e6*0.075;
                        Q_L6         = 100e6*0.116;
                        Q_L7         = 100e6*0.058;
                        Q_L8         = 100e6*0.018;
                        Q_L9         = 100e6*0.016;
                        Q_L10        = 100e6*0.058;
                        Q_L11        = 100e6*0.050;
                        
			P_SLACK(k)   = P_G1;
			P_GEN_TOT(k) = P_G1 + P_G2 + P_G3 + P_G6 + P_G8;
			Q_GEN_TOT(k) = Q_G1 + Q_G2 + Q_G3 + Q_G6 + Q_G8;
                        P_LTOT(k)    = P_L1 + P_L2 + P_L3 + P_L4 + P_L5 + P_L6 + P_L7 + P_L8 + P_L8 + P_L9 + P_L10 + P_L11;
                        Q_LTOT(k)    = Q_L1 + Q_L2 + Q_L3 + Q_L4 + Q_L5 + Q_L6 + Q_L7 + Q_L8 + Q_L8 + Q_L9 + Q_L10 + Q_L11;
                        P_EVTOT(k)   = 0;
                        Q_EVTOT(k)   = 0;
                        SOC_EV(k)    = EV_SOC_INIT;

                        V_BUS(k,1)   = sqrt((get("Dc1.bus1:d"))^2  + (get("Dc1.bus1:q"))^2);
                        V_BUS(k,2)   = sqrt((get("Dc1.bus2:d"))^2  + (get("Dc1.bus2:q"))^2);
                        V_BUS(k,3)   = sqrt((get("Dc1.bus3:d"))^2  + (get("Dc1.bus3:q"))^2);
                        V_BUS(k,4)   = sqrt((get("Dc1.bus4:d"))^2  + (get("Dc1.bus4:q"))^2);
                        V_BUS(k,5)   = sqrt((get("Dc1.bus5:d"))^2  + (get("Dc1.bus5:q"))^2);
                        V_BUS(k,6)   = sqrt((get("Dc1.bus6:d"))^2  + (get("Dc1.bus6:q"))^2);
                        V_BUS(k,7)   = sqrt((get("Dc1.bus7:d"))^2  + (get("Dc1.bus7:q"))^2);
                        V_BUS(k,8)   = sqrt((get("Dc1.bus8:d"))^2  + (get("Dc1.bus8:q"))^2);
                        V_BUS(k,9)   = sqrt((get("Dc1.bus9:d"))^2  + (get("Dc1.bus9:q"))^2);
                        V_BUS(k,10)  = sqrt((get("Dc1.bus10:d"))^2 + (get("Dc1.bus10:q"))^2);
                        V_BUS(k,11)  = sqrt((get("Dc1.bus11:d"))^2 + (get("Dc1.bus11:q"))^2);
                        V_BUS(k,12)  = sqrt((get("Dc1.bus12:d"))^2 + (get("Dc1.bus12:q"))^2);
                        V_BUS(k,13)  = sqrt((get("Dc1.bus13:d"))^2 + (get("Dc1.bus13:q"))^2);
                        V_BUS(k,14)  = sqrt((get("Dc1.bus14:d"))^2 + (get("Dc1.bus14:q"))^2);

                        I_LINE(k,1)  = sqrt((get("Dc1.i1_d"))^2    + (get("Dc1.i1_q"))^2);
                        I_LINE(k,2)  = sqrt((get("Dc1.i2_d"))^2    + (get("Dc1.i2_q"))^2);
                        I_LINE(k,3)  = sqrt((get("Dc1.i3_d"))^2    + (get("Dc1.i3_q"))^2);
                        I_LINE(k,4)  = sqrt((get("Dc1.i4_d"))^2    + (get("Dc1.i4_q"))^2);
                        I_LINE(k,5)  = sqrt((get("Dc1.i5_d"))^2    + (get("Dc1.i5_q"))^2);
                        I_LINE(k,6)  = sqrt((get("Dc1.i6_d"))^2    + (get("Dc1.i6_q"))^2);
                        I_LINE(k,7)  = sqrt((get("Dc1.i7_d"))^2    + (get("Dc1.i7_q"))^2);
                        I_LINE(k,8)  = sqrt((get("Dc1.i8_d"))^2    + (get("Dc1.i8_q"))^2);
                        I_LINE(k,9)  = sqrt((get("Dc1.i9_d"))^2    + (get("Dc1.i9_q"))^2);
                        I_LINE(k,10) = sqrt((get("Dc1.i10_d"))^2   + (get("Dc1.i10_q"))^2);
                        I_LINE(k,11) = sqrt((get("Dc1.i11_d"))^2   + (get("Dc1.i11_q"))^2);
                        I_LINE(k,12) = sqrt((get("Dc1.i12_d"))^2   + (get("Dc1.i12_q"))^2);
                        I_LINE(k,13) = sqrt((get("Dc1.i13_d"))^2   + (get("Dc1.i13_q"))^2);
                        I_LINE(k,14) = sqrt((get("Dc1.i14_d"))^2   + (get("Dc1.i14_q"))^2);
                        I_LINE(k,15) = sqrt((get("Dc1.i15_d"))^2   + (get("Dc1.i15_q"))^2);
                        I_LINE(k,16) = sqrt((get("Dc1.i16_d"))^2   + (get("Dc1.i16_q"))^2);

                end

#ifdef SAVE
save("mat5","OVERLOAD_BASE.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
endcontrol

#endif

// ------------------------------------------- //
// WHAT TO DO IN CASE OF BASE_CASE ENDS HERE   //
// ------------------------------------------- //

// ------------------------------------------- //
// WHAT TO DO IN CASE OF CASE_EV BEGINS HERE   //
// ------------------------------------------- //

#ifdef CASE_EV

//Dc0    dc nettype=1 sparse=3 print=no uic=1
//Tr0  tran nettype=1 sparse=3 tstop=100 uic=1 acntrl=3 saman=0 ireltol=0.01m vreltol=0.01m
Dcx    dc nettype=1 sparse=3 restart=no time=0 print=yes fixsm=yes load="overload.dc"
//Dcx    dc nettype=1 sparse=3 restart=no time=0 print=yes iabstol=1u vabstol=1u fixsm=yes load="overload.dc"

Sweep control begin
        k = 0;
	j = 0;
	SWEEP_SOC sweep start=START_SOC step=STEP_SOC  stop=END_SOC  param="EV_SOC_INIT" begin
		k = k + 1;

	Dc1    dc nettype=1 sparse=2 restart=no time=0 print=yes iabstol=1u fixsm=yes

			P_G1         = get("Dc1.p_G1");
			P_G2         = get("Dc1.p_G2");
			P_G3         = get("Dc1.p_G3");
			P_G6         = get("Dc1.p_G6");
			P_G8         = get("Dc1.p_G8");

			Q_G1         = get("Dc1.q_G1");
			Q_G2         = get("Dc1.q_G2");
			Q_G3         = get("Dc1.q_G3");
			Q_G6         = get("Dc1.q_G6");
			Q_G8         = get("Dc1.q_G8");

			P_L1         = 100e6*0.217;
			P_L2         = 100e6*0.942;
			P_L3         = 100e6*0.478;
			P_L4         = 100e6*0.076;
			P_L5         = 100e6*0.112;
			P_L6         = 100e6*0.295;
			P_L7         = 100e6*0.090;
			P_L8         = 100e6*0.035;
			P_L9         = 100e6*0.061;
			P_L10        = 100e6*0.135;
			P_L11        = 100e6*0.149;
			
			Q_L1         = 100e6*0.127;
			Q_L2         = 100e6*0.190;
			Q_L3         = 100e6*(-0.039);
			Q_L4         = 100e6*0.016;
			Q_L5         = 100e6*0.075;
			Q_L6         = 100e6*0.116;
			Q_L7         = 100e6*0.058;
			Q_L8         = 100e6*0.018;
			Q_L9         = 100e6*0.016;
			Q_L10        = 100e6*0.058;
			Q_L11        = 100e6*0.050;
			
			P_SLACK(k)   = P_G1;
			P_GEN_TOT(k) = P_G1 + P_G2 + P_G3 + P_G6 + P_G8;
			Q_GEN_TOT(k) = Q_G1 + Q_G2 + Q_G3 + Q_G6 + Q_G8;

	
			P_LTOT(k)       = P_L1 + P_L2 + P_L3 + P_L4 + P_L5 + P_L6 + P_L7 + P_L8 + P_L8 + P_L9 + P_L10 + P_L11;
			Q_LTOT(k)       = Q_L1 + Q_L2 + Q_L3 + Q_L4 + Q_L5 + Q_L6 + Q_L7 + Q_L8 + Q_L8 + Q_L9 + Q_L10 + Q_L11;
			
                        P_EV1        = -get("Dc1.EV1.p_cs");
                        P_EV2        = -get("Dc1.EV2.p_cs");
                        P_EV3        = -get("Dc1.EV3.p_cs");
                        P_EV4        = -get("Dc1.EV4.p_cs");
                        P_EV5        = -get("Dc1.EV5.p_cs");
                        P_EV6        = -get("Dc1.EV6.p_cs");
                        P_EV7        = -get("Dc1.EV7.p_cs");
                        P_EV8        = -get("Dc1.EV8.p_cs");
                        P_EV9        = -get("Dc1.EV9.p_cs");
                        P_EV10       = -get("Dc1.EV10.p_cs");
                        P_EV11       = -get("Dc1.EV11.p_cs");

                        P_EVTOT(k)       = P_EV1 + P_EV2 + P_EV3 + P_EV4 + P_EV5 + P_EV6 + P_EV7 + P_EV8 + P_EV8 + P_EV9 + P_EV10 + P_EV11;
                        Q_EVTOT(k)      = 0;

			SOC_EV(k)       = EV_SOC_INIT;

			V_BUS(k,1)   = sqrt((get("Dc1.bus1:d"))^2  + (get("Dc1.bus1:q"))^2);
			V_BUS(k,2)   = sqrt((get("Dc1.bus2:d"))^2  + (get("Dc1.bus2:q"))^2);
			V_BUS(k,3)   = sqrt((get("Dc1.bus3:d"))^2  + (get("Dc1.bus3:q"))^2);
			V_BUS(k,4)   = sqrt((get("Dc1.bus4:d"))^2  + (get("Dc1.bus4:q"))^2);
			V_BUS(k,5)   = sqrt((get("Dc1.bus5:d"))^2  + (get("Dc1.bus5:q"))^2);
			V_BUS(k,6)   = sqrt((get("Dc1.bus6:d"))^2  + (get("Dc1.bus6:q"))^2);
			V_BUS(k,7)   = sqrt((get("Dc1.bus7:d"))^2  + (get("Dc1.bus7:q"))^2);
			V_BUS(k,8)   = sqrt((get("Dc1.bus8:d"))^2  + (get("Dc1.bus8:q"))^2);
			V_BUS(k,9)   = sqrt((get("Dc1.bus9:d"))^2  + (get("Dc1.bus9:q"))^2);
			V_BUS(k,10)  = sqrt((get("Dc1.bus10:d"))^2 + (get("Dc1.bus10:q"))^2);
			V_BUS(k,11)  = sqrt((get("Dc1.bus11:d"))^2 + (get("Dc1.bus11:q"))^2);
			V_BUS(k,12)  = sqrt((get("Dc1.bus12:d"))^2 + (get("Dc1.bus12:q"))^2);
			V_BUS(k,13)  = sqrt((get("Dc1.bus13:d"))^2 + (get("Dc1.bus13:q"))^2);
			V_BUS(k,14)  = sqrt((get("Dc1.bus14:d"))^2 + (get("Dc1.bus14:q"))^2);

			I_LINE(k,1)  = sqrt((get("Dc1.i1_d"))^2    + (get("Dc1.i1_q"))^2);
			I_LINE(k,2)  = sqrt((get("Dc1.i2_d"))^2    + (get("Dc1.i2_q"))^2);
			I_LINE(k,3)  = sqrt((get("Dc1.i3_d"))^2    + (get("Dc1.i3_q"))^2);
			I_LINE(k,4)  = sqrt((get("Dc1.i4_d"))^2    + (get("Dc1.i4_q"))^2);
			I_LINE(k,5)  = sqrt((get("Dc1.i5_d"))^2    + (get("Dc1.i5_q"))^2);
			I_LINE(k,6)  = sqrt((get("Dc1.i6_d"))^2    + (get("Dc1.i6_q"))^2);
			I_LINE(k,7)  = sqrt((get("Dc1.i7_d"))^2    + (get("Dc1.i7_q"))^2);
			I_LINE(k,8)  = sqrt((get("Dc1.i8_d"))^2    + (get("Dc1.i8_q"))^2);
			I_LINE(k,9)  = sqrt((get("Dc1.i9_d"))^2    + (get("Dc1.i9_q"))^2);
			I_LINE(k,10) = sqrt((get("Dc1.i10_d"))^2   + (get("Dc1.i10_q"))^2);
			I_LINE(k,11) = sqrt((get("Dc1.i11_d"))^2   + (get("Dc1.i11_q"))^2);
			I_LINE(k,12) = sqrt((get("Dc1.i12_d"))^2   + (get("Dc1.i12_q"))^2);
			I_LINE(k,13) = sqrt((get("Dc1.i13_d"))^2   + (get("Dc1.i13_q"))^2);
			I_LINE(k,14) = sqrt((get("Dc1.i14_d"))^2   + (get("Dc1.i14_q"))^2);
			I_LINE(k,15) = sqrt((get("Dc1.i15_d"))^2   + (get("Dc1.i15_q"))^2);
			I_LINE(k,16) = sqrt((get("Dc1.i16_d"))^2   + (get("Dc1.i16_q"))^2);

		end

#ifdef SAVE

#ifdef LFP
#ifdef CCCV
save("mat5","OVERLOAD_LFP_CCCV.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#else
save("mat5","OVERLOAD_LFP_CPCV.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
#endif

#ifdef LMO
#ifdef CCCV
save("mat5","OVERLOAD_LMO_CCCV.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#else
save("mat5","OVERLOAD_LMO_CPCV.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
#endif

#ifdef NCA
#ifdef CCCV
save("mat5","OVERLOAD_NCA_CCCV.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#else
save("mat5","OVERLOAD_NCA_CPCV.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
#endif

#ifdef NMC
#ifdef CCCV
save("mat5","OVERLOAD_NMC_CCCV.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#else
save("mat5","OVERLOAD_NMC_CPCV.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
#endif

#endif
endcontrol 

#endif

// ------------------------------------------- //
// WHAT TO DO IN CASE OF CASE_EV ENDS HERE     //
// ------------------------------------------- //


// ----------------------------------------------- //
// WHAT TO DO IN CASE OF CASE_EV_SYNTH BEGINS HERE //
// ----------------------------------------------- //

#ifdef CASE_EV_SYNTH

//Dc0    dc nettype=1 sparse=3 print=no uic=1
//Tr0  tran nettype=1 sparse=3 tstop=100 uic=1 acntrl=3 saman=0 iabstol=0.1u tmin=0.1m
//Dcx    dc nettype=1 sparse=3 restart=no time=0 print=yes fixsm=yes save="Dc_synth.dc"
Dcx    dc nettype=1 sparse=3 time=0 print=yes fixsm=yes load="Dc_synth.dc"

Sweep control begin
        k = 0;
        j = 0;
        SWEEP_SOC sweep start=START_SOC step=STEP_SOC  stop=END_SOC  param="EV_SOC_INIT" begin
                k = k + 1;

	Dc1    dc nettype=1 sparse=2 restart=no time=0 print=yes iabstol=1u fixsm=yes


                        P_G1         = get("Dc1.p_G1");
                        P_G2         = get("Dc1.p_G2");
                        P_G3         = get("Dc1.p_G3");
                        P_G6         = get("Dc1.p_G6");
                        P_G8         = get("Dc1.p_G8");

                        Q_G1         = get("Dc1.q_G1");
                        Q_G2         = get("Dc1.q_G2");
                        Q_G3         = get("Dc1.q_G3");
                        Q_G6         = get("Dc1.q_G6");
                        Q_G8         = get("Dc1.q_G8");

                        P_L1         = 100e6*0.217;
                        P_L2         = 100e6*0.942;
                        P_L3         = 100e6*0.478;
                        P_L4         = 100e6*0.076;
                        P_L5         = 100e6*0.112;
                        P_L6         = 100e6*0.295;
                        P_L7         = 100e6*0.090;
                        P_L8         = 100e6*0.035;
                        P_L9         = 100e6*0.061;
                        P_L10        = 100e6*0.135;
                        P_L11        = 100e6*0.149;


                        Q_L1         = 100e6*0.127;
                        Q_L2         = 100e6*0.190;
                        Q_L3         = 100e6*(-0.039);
                        Q_L4         = 100e6*0.016;
                        Q_L5         = 100e6*0.075;
                        Q_L6         = 100e6*0.116;
                        Q_L7         = 100e6*0.058;
                        Q_L8         = 100e6*0.018;
                        Q_L9         = 100e6*0.016;
                        Q_L10        = 100e6*0.058;
                        Q_L11        = 100e6*0.050;	

			P_SLACK(k)   = P_G1;
			P_GEN_TOT(k) = P_G1 + P_G2 + P_G3 + P_G6 + P_G8;
			Q_GEN_TOT(k) = Q_G1 + Q_G2 + Q_G3 + Q_G6 + Q_G8;
	
			P_LTOT(k)       = P_L1 + P_L2 + P_L3 + P_L4 + P_L5 + P_L6 + P_L7 + P_L8 + P_L8 + P_L9 + P_L10 + P_L11;
			Q_LTOT(k)       = Q_L1 + Q_L2 + Q_L3 + Q_L4 + Q_L5 + Q_L6 + Q_L7 + Q_L8 + Q_L8 + Q_L9 + Q_L10 + Q_L11;
			
                        P_EV1        = -get("Dc1.EV1.p_ext");
                        P_EV2        = -get("Dc1.EV2.p_ext");
                        P_EV3        = -get("Dc1.EV3.p_ext");
                        P_EV4        = -get("Dc1.EV4.p_ext");
                        P_EV5        = -get("Dc1.EV5.p_ext");
                        P_EV6        = -get("Dc1.EV6.p_ext");
                        P_EV7        = -get("Dc1.EV7.p_ext");
                        P_EV8        = -get("Dc1.EV8.p_ext");
                        P_EV9        = -get("Dc1.EV9.p_ext");
                        P_EV10       = -get("Dc1.EV10.p_ext");
                        P_EV11       = -get("Dc1.EV11.p_ext");

                        P_EVTOT(k)       = P_EV1 + P_EV2 + P_EV3 + P_EV4 + P_EV5 + P_EV6 + P_EV7 + P_EV8 + P_EV8 + P_EV9 + P_EV10 + P_EV11;
                        Q_EVTOT(k)      = 0;

			SOC_EV(k)       = EV_SOC_INIT;

			V_BUS(k,1)   = sqrt((get("Dc1.bus1:d"))^2  + (get("Dc1.bus1:q"))^2);
			V_BUS(k,2)   = sqrt((get("Dc1.bus2:d"))^2  + (get("Dc1.bus2:q"))^2);
			V_BUS(k,3)   = sqrt((get("Dc1.bus3:d"))^2  + (get("Dc1.bus3:q"))^2);
			V_BUS(k,4)   = sqrt((get("Dc1.bus4:d"))^2  + (get("Dc1.bus4:q"))^2);
			V_BUS(k,5)   = sqrt((get("Dc1.bus5:d"))^2  + (get("Dc1.bus5:q"))^2);
			V_BUS(k,6)   = sqrt((get("Dc1.bus6:d"))^2  + (get("Dc1.bus6:q"))^2);
			V_BUS(k,7)   = sqrt((get("Dc1.bus7:d"))^2  + (get("Dc1.bus7:q"))^2);
			V_BUS(k,8)   = sqrt((get("Dc1.bus8:d"))^2  + (get("Dc1.bus8:q"))^2);
			V_BUS(k,9)   = sqrt((get("Dc1.bus9:d"))^2  + (get("Dc1.bus9:q"))^2);
			V_BUS(k,10)  = sqrt((get("Dc1.bus10:d"))^2 + (get("Dc1.bus10:q"))^2);
			V_BUS(k,11)  = sqrt((get("Dc1.bus11:d"))^2 + (get("Dc1.bus11:q"))^2);
			V_BUS(k,12)  = sqrt((get("Dc1.bus12:d"))^2 + (get("Dc1.bus12:q"))^2);
			V_BUS(k,13)  = sqrt((get("Dc1.bus13:d"))^2 + (get("Dc1.bus13:q"))^2);
			V_BUS(k,14)  = sqrt((get("Dc1.bus14:d"))^2 + (get("Dc1.bus14:q"))^2);

			I_LINE(k,1)  = sqrt((get("Dc1.i1_d"))^2    + (get("Dc1.i1_q"))^2);
			I_LINE(k,2)  = sqrt((get("Dc1.i2_d"))^2    + (get("Dc1.i2_q"))^2);
			I_LINE(k,3)  = sqrt((get("Dc1.i3_d"))^2    + (get("Dc1.i3_q"))^2);
			I_LINE(k,4)  = sqrt((get("Dc1.i4_d"))^2    + (get("Dc1.i4_q"))^2);
			I_LINE(k,5)  = sqrt((get("Dc1.i5_d"))^2    + (get("Dc1.i5_q"))^2);
			I_LINE(k,6)  = sqrt((get("Dc1.i6_d"))^2    + (get("Dc1.i6_q"))^2);
			I_LINE(k,7)  = sqrt((get("Dc1.i7_d"))^2    + (get("Dc1.i7_q"))^2);
			I_LINE(k,8)  = sqrt((get("Dc1.i8_d"))^2    + (get("Dc1.i8_q"))^2);
			I_LINE(k,9)  = sqrt((get("Dc1.i9_d"))^2    + (get("Dc1.i9_q"))^2);
			I_LINE(k,10) = sqrt((get("Dc1.i10_d"))^2   + (get("Dc1.i10_q"))^2);
			I_LINE(k,11) = sqrt((get("Dc1.i11_d"))^2   + (get("Dc1.i11_q"))^2);
			I_LINE(k,12) = sqrt((get("Dc1.i12_d"))^2   + (get("Dc1.i12_q"))^2);
			I_LINE(k,13) = sqrt((get("Dc1.i13_d"))^2   + (get("Dc1.i13_q"))^2);
			I_LINE(k,14) = sqrt((get("Dc1.i14_d"))^2   + (get("Dc1.i14_q"))^2);
			I_LINE(k,15) = sqrt((get("Dc1.i15_d"))^2   + (get("Dc1.i15_q"))^2);
			I_LINE(k,16) = sqrt((get("Dc1.i16_d"))^2   + (get("Dc1.i16_q"))^2);

		end


#ifdef SAVE

#ifdef LFP
#ifdef CCCV
save("mat5","OVERLOAD_LFP_CCCV_SYNTH.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#else
save("mat5","OVERLOAD_LFP_CPCV_SYNTH.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
#endif

#ifdef LMO
#ifdef CCCV
save("mat5","OVERLOAD_LMO_CCCV_SYNTH.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#else
save("mat5","OVERLOAD_LMO_CPCV_SYNTH.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
#endif

#ifdef NCA
#ifdef CCCV
save("mat5","OVERLOAD_NCA_CCCV_SYNTH.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#else
save("mat5","OVERLOAD_NCA_CPCV_SYNTH.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
#endif

#ifdef NMC
#ifdef CCCV
save("mat5","OVERLOAD_NMC_CCCV_SYNTH.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#else
save("mat5","OVERLOAD_NMC_CPCV_SYNTH.mat","SOC",SOC_EV,"P_SLACK",P_SLACK,"V_BUS",V_BUS,"I_LINE",I_LINE,"P_LTOT",P_LTOT,"Q_LTOT",Q_LTOT,"P_EVTOT",P_EVTOT,"Q_EVTOT",Q_EVTOT,"P_GEN_TOT",P_GEN_TOT,"Q_GEN_TOT",Q_GEN_TOT);
#endif
#endif

#endif
endcontrol 

#endif

// ----------------------------------------------- //
// WHAT TO DO IN CASE OF CASE_EV_SYNTH ENDS HERE   //
// ----------------------------------------------- //

